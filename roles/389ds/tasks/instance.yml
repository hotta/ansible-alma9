---
- name: roles/389ds/tasks/instance.yml
  assert: { that: true, quiet: true }

# https://www.taruki.com/wp/?p=7764

- name: Enable 389ds repository
  command: dnf -y copr enable @389ds/389-directory-server
  become: yes

- name: Install 389-ds and coclpit
  dnf:
    name:
      - 389-ds-base
      - 389-ds-base-libs
      - python3-lib389
      - cockpit-389-ds
  become: true

- name: Deploy template file to /tmp
  template:
    src: advanced.inf
    dest: "{{ DS389_TEMPLATE_PATH }}"

- name: Show effective entries of {{ DS389_TEMPLATE_PATH }}
  command: grep -vE '(^[;#]|^$)' {{ DS389_TEMPLATE_PATH }}
  register: ds_temp

- debug: var=ds_temp.stdout_lines

- debug: 
    msg: We will deploy 389ds instance by using these setting values above...

- name: Check existence of slapd instance
  command: dsctl {{ DS389_INSTANCE_NAME }} status
  become: yes
  register: check_instance
  ignore_errors: yes

- debug: var=check_instance.failed

- name: Force disable replication for {{ DS389_SUFFIX }}
  command:
    argv:
      - dsconf 
      - "{{ DS389_INSTANCE_NAME }}"
      - replication 
      - disable
      - --suffix
      - "{{ DS389_SUFFIX }}"
  become: true
  when: 
    - not check_instance.failed
  ignore_errors: true

- name: Stop 389ds instance if needed
  command: dsctl {{ DS389_INSTANCE_NAME }} stop
  become: yes
  when: 
    - not check_instance.failed
  ignore_errors: yes

- name: Delete current instance if exists
  command: dsctl {{ DS389_INSTANCE_NAME }} remove --do-it
  become: yes
  when: 
    - not check_instance.failed
    - DS389_FORCE_CREATE
  tags: delete_instance
  
- name: Create 389ds instance
  command: dscreate from-file {{ DS389_TEMPLATE_PATH }}
  become: yes
  when: check_instance.failed or DS389_FORCE_CREATE

- name: Open the port of firewall for 389ds
  ansible.posix.firewalld:
    immediate: true
    offline: true
    permanent: true
    service: "{{ item }}"
    state: enabled
  become: yes
  loop:
    - ldap
    - ldaps
  ignore_errors: true

- name: Enable cockpit
  systemd:
    name: cockpit.socket
    state: started
    enabled: true
  become: true
    
